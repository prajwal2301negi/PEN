// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // Only use when Long Text is given and we need to provide searching
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String?
  email      String    @unique
  password   String?
  created_at DateTime  @default(now())
  post       Post[] // one User can create multiple posts
  comment    Comment[] // one User can create multiple comments
}

model Post {
  id            Int       @id @default(autoincrement())
  user          User      @relation(fields: [user_id], references: [id], onDelete: Cascade) // Cascade-> once Post gets deleted, all comments in the post also get deleted.
  user_id       Int // as user has id of Integer type
  title         String
  description   String
  comment_count Int    @default(0)
  created_at    DateTime  @default(now())
  comment       Comment[]
}

model Comment {
  id         Int      @id @default(autoincrement())
  post       Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)  // references means table
  post_id    Int
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  comment    String
  created_at DateTime @default(now())
}
